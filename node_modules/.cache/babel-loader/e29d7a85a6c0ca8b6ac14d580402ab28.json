{"ast":null,"code":"var _jsxFileName = \"E:\\\\subjects\\\\ReactJS\\\\ReactJS\\\\example\\\\vocabulary\\\\src\\\\Components\\\\App\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Header from '../Header/Header';\nimport Navbar from '../Navbar/Navbar';\nimport Content from '../Content/Content';\nimport { useCallback, useEffect, useState } from 'react';\nimport { v4 } from 'uuid'; //get method v4 from uuid\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //create state CourseList\n  const [CourseList, setCourseList] = useState([]); // get CourseList in localStorage\n\n  useEffect(() => {\n    const localStoredCourseList = localStorage.getItem(\"CourseList\");\n\n    if (localStoredCourseList) {\n      setCourseList(JSON.parse(localStoredCourseList));\n    }\n  }, []); // save CourseList to localStorage\n\n  useEffect(() => {\n    localStorage.setItem(\"CourseList\", JSON.stringify(CourseList));\n  }, [CourseList]);\n  const addCourse = useCallback((textInput, setTextInput) => {\n    // if (CourseList.length == 0){\n    //   setCourseList([...CourseList,{id:v4(), name: textInput, vocabularyList:[], index: 0}])\n    // }else{\n    //   setCourseList([...CourseList,{id:v4(), name: textInput, vocabularyList:[], index: CourseList[CourseList.length - 1].index + 1}])\n    // }\n    setCourseList([...CourseList, {\n      id: v4(),\n      name: textInput,\n      vocabularyList: [],\n      index: 0\n    }]);\n    setTextInput(\"\");\n  }, [CourseList]);\n  const addVocabulary = useCallback((id, vocabularyList) => {\n    setCourseList(prevState => prevState.map(course => course.id === id ? { ...course,\n      vocabularyList: vocabularyList\n    } : course));\n  }, []);\n  const removeCourse = useCallback(id => {\n    setCourseList(prevState => prevState.filter(course => course.id != id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n        CourseList: CourseList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        CourseList: CourseList,\n        removeCourse: removeCourse,\n        addCourse: addCourse,\n        addVocabulary: addVocabulary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        className: \"back-to-top d-flex align-items-center justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-arrow-up-short\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 93\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dXlSvvXzfoUljyv5Wo0vpIfWGt0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/subjects/ReactJS/ReactJS/example/vocabulary/src/Components/App/App.js"],"names":["Header","Navbar","Content","useCallback","useEffect","useState","v4","BrowserRouter","Router","App","CourseList","setCourseList","localStoredCourseList","localStorage","getItem","JSON","parse","setItem","stringify","addCourse","textInput","setTextInput","id","name","vocabularyList","index","addVocabulary","prevState","map","course","removeCourse","filter"],"mappings":"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","sourcesContent":["import './App.css';\nimport Header from '../Header/Header';\nimport Navbar from '../Navbar/Navbar';\nimport Content from '../Content/Content';\nimport { useCallback, useEffect, useState } from 'react';\nimport {v4} from 'uuid' //get method v4 from uuid\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nfunction App() {\n  //create state CourseList\n  const [CourseList,setCourseList] = useState([])\n\n  // get CourseList in localStorage\n  useEffect(() => {\n    const localStoredCourseList = localStorage.getItem(\"CourseList\")\n    if (localStoredCourseList){\n      setCourseList(JSON.parse(localStoredCourseList))\n    }\n  },[])\n\n  // save CourseList to localStorage\n  useEffect(() => {\n    localStorage.setItem(\"CourseList\",JSON.stringify(CourseList))\n  },[CourseList])\n\n  const addCourse = useCallback((textInput,setTextInput) => {\n      // if (CourseList.length == 0){\n      //   setCourseList([...CourseList,{id:v4(), name: textInput, vocabularyList:[], index: 0}])\n      // }else{\n      //   setCourseList([...CourseList,{id:v4(), name: textInput, vocabularyList:[], index: CourseList[CourseList.length - 1].index + 1}])\n      // }\n      setCourseList([...CourseList,{id:v4(), name: textInput, vocabularyList:[], index: 0}])\n      setTextInput(\"\")\n  },[CourseList])\n\n  const addVocabulary = useCallback((id,vocabularyList) => {\n    setCourseList(prevState => prevState.map(course => course.id === id ? {...course,vocabularyList: vocabularyList} : course))\n},[])\n\n  const removeCourse = useCallback((id) => {\n    setCourseList(prevState => prevState.filter(course => course.id != id))\n  },[])\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Navbar CourseList = {CourseList} />\n        <Content CourseList = {CourseList} removeCourse = {removeCourse} addCourse = {addCourse} addVocabulary = {addVocabulary}/>\n        <a href=\"\" className=\"back-to-top d-flex align-items-center justify-content-center\"><i className=\"bi bi-arrow-up-short\"></i></a>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}