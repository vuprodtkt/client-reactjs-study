{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onMouseDown\", \"onMouseUp\"];\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport ButtonBase from './shared/button-base';\nimport { getCss } from './shared/css';\nimport getIsOnlySingleIcon from './shared/get-is-only-single-icon';\n\nfunction noop() {}\n\nvar isFirefox = typeof navigator !== 'undefined' && navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\nvar Button = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Button(_ref, ref) {\n  var _ref$onMouseDown = _ref.onMouseDown,\n      providedOnMouseDown = _ref$onMouseDown === void 0 ? noop : _ref$onMouseDown,\n      _ref$onMouseUp = _ref.onMouseUp,\n      providedOnMouseUp = _ref$onMouseUp === void 0 ? noop : _ref$onMouseUp,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useGlobalTheme = useGlobalTheme(),\n      mode = _useGlobalTheme.mode;\n\n  var appearance = rest.appearance || 'default';\n  var spacing = rest.spacing || 'default';\n  var shouldFitContainer = Boolean(rest.shouldFitContainer);\n  var isSelected = Boolean(rest.isSelected);\n  var isOnlySingleIcon = getIsOnlySingleIcon(rest);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1]; // Wrap onMouseDown / onMouseUp to manually trigger active state\n  //  in Firefox\n\n\n  var onMouseDown = useCallback(function (event) {\n    providedOnMouseDown(event);\n\n    if (isFirefox) {\n      setIsActive(true);\n    }\n  }, [providedOnMouseDown, setIsActive]);\n  var onMouseUp = useCallback(function (event) {\n    providedOnMouseUp(event);\n\n    if (isFirefox) {\n      setIsActive(false);\n    }\n  }, [providedOnMouseUp, setIsActive]);\n  var buttonCss = useMemo(function () {\n    return getCss({\n      appearance: appearance,\n      spacing: spacing,\n      mode: mode,\n      isSelected: isSelected,\n      shouldFitContainer: shouldFitContainer,\n      isOnlySingleIcon: isOnlySingleIcon\n    });\n  }, [appearance, spacing, mode, isSelected, shouldFitContainer, isOnlySingleIcon]);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({}, rest, {\n    ref: ref,\n    buttonCss: buttonCss // Due to how click events are set, we need to set active styles\n    //  manually in Firefox and wrap onMouseDown/onMouseUp\n    ,\n    \"data-firefox-is-active\": isActive ? true : undefined,\n    onMouseDown: onMouseDown,\n    onMouseUp: onMouseUp\n  }));\n})); // Tools including enzyme rely on components having a display name\n\nButton.displayName = 'Button';\nexport default Button;","map":{"version":3,"sources":["E:/subjects/ReactJS/ReactJS/example/study/client/node_modules/@atlaskit/button/dist/esm/button.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","_excluded","React","useCallback","useMemo","useState","useGlobalTheme","ButtonBase","getCss","getIsOnlySingleIcon","noop","isFirefox","navigator","userAgent","toLowerCase","indexOf","Button","memo","forwardRef","_ref","ref","_ref$onMouseDown","onMouseDown","providedOnMouseDown","_ref$onMouseUp","onMouseUp","providedOnMouseUp","rest","_useGlobalTheme","mode","appearance","spacing","shouldFitContainer","Boolean","isSelected","isOnlySingleIcon","_useState","_useState2","isActive","setIsActive","event","buttonCss","createElement","undefined","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onMouseDown\", \"onMouseUp\"];\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport ButtonBase from './shared/button-base';\nimport { getCss } from './shared/css';\nimport getIsOnlySingleIcon from './shared/get-is-only-single-icon';\n\nfunction noop() {}\n\nvar isFirefox = typeof navigator !== 'undefined' && navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\nvar Button = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Button(_ref, ref) {\n  var _ref$onMouseDown = _ref.onMouseDown,\n      providedOnMouseDown = _ref$onMouseDown === void 0 ? noop : _ref$onMouseDown,\n      _ref$onMouseUp = _ref.onMouseUp,\n      providedOnMouseUp = _ref$onMouseUp === void 0 ? noop : _ref$onMouseUp,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useGlobalTheme = useGlobalTheme(),\n      mode = _useGlobalTheme.mode;\n\n  var appearance = rest.appearance || 'default';\n  var spacing = rest.spacing || 'default';\n  var shouldFitContainer = Boolean(rest.shouldFitContainer);\n  var isSelected = Boolean(rest.isSelected);\n  var isOnlySingleIcon = getIsOnlySingleIcon(rest);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isActive = _useState2[0],\n      setIsActive = _useState2[1]; // Wrap onMouseDown / onMouseUp to manually trigger active state\n  //  in Firefox\n\n\n  var onMouseDown = useCallback(function (event) {\n    providedOnMouseDown(event);\n\n    if (isFirefox) {\n      setIsActive(true);\n    }\n  }, [providedOnMouseDown, setIsActive]);\n  var onMouseUp = useCallback(function (event) {\n    providedOnMouseUp(event);\n\n    if (isFirefox) {\n      setIsActive(false);\n    }\n  }, [providedOnMouseUp, setIsActive]);\n  var buttonCss = useMemo(function () {\n    return getCss({\n      appearance: appearance,\n      spacing: spacing,\n      mode: mode,\n      isSelected: isSelected,\n      shouldFitContainer: shouldFitContainer,\n      isOnlySingleIcon: isOnlySingleIcon\n    });\n  }, [appearance, spacing, mode, isSelected, shouldFitContainer, isOnlySingleIcon]);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({}, rest, {\n    ref: ref,\n    buttonCss: buttonCss // Due to how click events are set, we need to set active styles\n    //  manually in Firefox and wrap onMouseDown/onMouseUp\n    ,\n    \"data-firefox-is-active\": isActive ? true : undefined,\n    onMouseDown: onMouseDown,\n    onMouseUp: onMouseUp\n  }));\n})); // Tools including enzyme rely on components having a display name\n\nButton.displayName = 'Button';\nexport default Button;"]},"metadata":{},"sourceType":"module"}