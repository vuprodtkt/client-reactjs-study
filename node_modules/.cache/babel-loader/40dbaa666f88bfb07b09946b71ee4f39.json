{"ast":null,"code":"var _jsxFileName = \"E:\\\\subjects\\\\ReactJS\\\\ReactJS\\\\example\\\\study\\\\client\\\\src\\\\Components\\\\Content\\\\study\\\\StudyPlay.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Answer from './Answer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction StudyPlay(_ref) {\n  _s();\n\n  let {\n    numVocab,\n    numGrammar,\n    vocabularyList,\n    grammarList\n  } = _ref;\n  const [count, setCount] = useState(1);\n  const [isShowAnswer, setIsShowAnswer] = useState(false); // const [question,setQuestion] = useState([]);\n\n  let question = [];\n  let total = numVocab + numGrammar;\n  let verbTypeList = [\"V-ing\", \"to + V1\", \"V1\", \"v3/ed\", \"v2\"];\n\n  const formatType = type => {\n    if (type === \"Danh từ\") {\n      return \"(n)\";\n    } else if (type === \"Động từ\") {\n      return \"(v)\";\n    } else if (type === \"Tính từ\") {\n      return \"(adj)\";\n    } else if (type === \"Trạng từ\") {\n      return \"(adv)\";\n    }\n  };\n\n  useEffect(() => {\n    console.log(vocabularyList);\n\n    for (let i = 0; i < numVocab; i++) {\n      let rand = Math.floor(Math.random() * vocabularyList.length);\n      let numTrueAnswer = Math.floor(Math.random() * 4);\n      let answerList = [];\n\n      for (let j = 0; j < 4; j++) {\n        if (j === numTrueAnswer) {\n          answerList[j] = vocabularyList[rand].means;\n        } else {\n          let check = true;\n\n          while (check) {\n            let rand1 = Math.floor(Math.random() * vocabularyList.length);\n            check = answerList.filter(answer => answer === vocabularyList[rand1].means).length === 0 && rand1 !== rand ? false : true;\n\n            if (!check) {\n              answerList[j] = vocabularyList[rand1].means;\n            }\n          }\n        }\n      }\n\n      let questionItem = {\n        question: vocabularyList[rand].name + \" \" + formatType(vocabularyList[rand].type),\n        answer: numTrueAnswer,\n        answerList: answerList\n      }; // setQuestion(question.push(questionItem));\n\n      question.push(questionItem);\n    }\n\n    for (let i = 0; i < numGrammar; i++) {\n      let rand = Math.floor(Math.random() * grammarList.length);\n      let numTrueAnswer = Math.floor(Math.random() * 4);\n      let answerList = [];\n\n      for (let j = 0; j < 4; j++) {\n        if (j === numTrueAnswer) {\n          answerList[j] = grammarList[rand].verbType;\n        } else {\n          let check = true;\n\n          while (check) {\n            let rand1 = Math.floor(Math.random() * verbTypeList.length);\n            check = answerList.filter(answer => answer.toLowerCase() === verbTypeList[rand1].toLowerCase()).length === 0 && rand1 !== rand ? false : true;\n\n            if (!check) {\n              answerList[j] = verbTypeList[rand1].toLowerCase();\n            }\n          }\n        }\n      }\n\n      let questionItem = {\n        question: grammarList[rand].name,\n        answer: numTrueAnswer,\n        answerList: answerList\n      };\n      question.push(questionItem); // setQuestion(question.push(questionItem));\n    }\n  }, [question]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body p-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title p-3 m-0 rounded-top bg-primary\",\n          style: {\n            color: \"#ffffff\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"col-md-1 m-0 d-inline-block\",\n            children: \"C\\xE2u h\\u1ECFi:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-10 text-center d-inline-block\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"d-inline-block m-0\",\n              children: [count, \"/\", total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-top-0 rounded-0 text-center\",\n          style: {\n            minHeight: 80 + \"px\",\n            padding: 20 + \"px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"m-0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row m-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 px-5 py-3\",\n            children: /*#__PURE__*/_jsxDEV(Answer, {\n              index: 0,\n              question: question,\n              count: count,\n              setCount: setCount,\n              isShowAnswer: isShowAnswer,\n              setIsShowAnswer: setIsShowAnswer\n            }, 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 px-5 py-3\",\n            children: /*#__PURE__*/_jsxDEV(Answer, {\n              index: 1,\n              question: question,\n              count: count,\n              setCount: setCount,\n              isShowAnswer: isShowAnswer,\n              setIsShowAnswer: setIsShowAnswer\n            }, 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row m-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 px-5 py-3\",\n            children: /*#__PURE__*/_jsxDEV(Answer, {\n              index: 2,\n              question: question,\n              count: count,\n              setCount: setCount,\n              isShowAnswer: isShowAnswer,\n              setIsShowAnswer: setIsShowAnswer\n            }, 2, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 px-5 py-3\",\n            children: /*#__PURE__*/_jsxDEV(Answer, {\n              index: 3,\n              question: question,\n              count: count,\n              setCount: setCount,\n              isShowAnswer: isShowAnswer,\n              setIsShowAnswer: setIsShowAnswer\n            }, 3, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(StudyPlay, \"sUzTS6OGiyL/7TjtAoYmdTU+S8s=\");\n\n_c = StudyPlay;\nexport default StudyPlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyPlay\");","map":{"version":3,"sources":["E:/subjects/ReactJS/ReactJS/example/study/client/src/Components/Content/study/StudyPlay.js"],"names":["useEffect","useState","Answer","StudyPlay","numVocab","numGrammar","vocabularyList","grammarList","count","setCount","isShowAnswer","setIsShowAnswer","question","total","verbTypeList","formatType","type","console","log","i","rand","Math","floor","random","length","numTrueAnswer","answerList","j","means","check","rand1","filter","answer","questionItem","name","push","verbType","toLowerCase","color","minHeight","padding"],"mappings":"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","sourcesContent":["\r\nimport { useEffect, useState } from 'react';\r\nimport Answer from './Answer';\r\n\r\nfunction StudyPlay({numVocab,numGrammar,vocabularyList,grammarList}) {\r\n    const [count,setCount] = useState(1);\r\n    const [isShowAnswer,setIsShowAnswer] = useState(false);\r\n    // const [question,setQuestion] = useState([]);\r\n    let question = []\r\n    let total = numVocab + numGrammar;\r\n\r\n    let verbTypeList = [\"V-ing\", \"to + V1\", \"V1\", \"v3/ed\",\"v2\"];\r\n\r\n    const formatType = (type) =>{\r\n        if(type === \"Danh từ\"){\r\n            return \"(n)\";\r\n        }\r\n        else if(type === \"Động từ\"){\r\n            return \"(v)\";\r\n        }\r\n        else if(type === \"Tính từ\"){\r\n            return \"(adj)\";\r\n        }\r\n        else if(type === \"Trạng từ\"){\r\n            return \"(adv)\";\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(vocabularyList)\r\n        for(let i = 0;i< numVocab;i++){\r\n            let rand = Math.floor(Math.random() * vocabularyList.length);\r\n    \r\n            let numTrueAnswer = Math.floor(Math.random() * 4);\r\n            let answerList = []\r\n            for(let j = 0;j<4;j++){\r\n                if (j === numTrueAnswer){\r\n                    answerList[j] = vocabularyList[rand].means;\r\n                }else{\r\n                    let check = true;\r\n                    while(check){\r\n                        let rand1 = Math.floor(Math.random() * vocabularyList.length);\r\n                        check = answerList.filter(answer => answer === vocabularyList[rand1].means).length === 0 && rand1 !== rand ? false:true;\r\n    \r\n                        if(!check){\r\n                            answerList[j] = vocabularyList[rand1].means;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            let questionItem = {\r\n                question: vocabularyList[rand].name + \" \" + formatType(vocabularyList[rand].type),\r\n                answer: numTrueAnswer,\r\n                answerList: answerList\r\n            }\r\n            // setQuestion(question.push(questionItem));\r\n            question.push(questionItem);\r\n        }\r\n    \r\n        for(let i = 0;i< numGrammar;i++){\r\n            let rand = Math.floor(Math.random() * grammarList.length);\r\n    \r\n            let numTrueAnswer = Math.floor(Math.random() * 4);\r\n            let answerList = []\r\n            for(let j = 0;j<4;j++){\r\n                if (j === numTrueAnswer){\r\n                    answerList[j] = grammarList[rand].verbType;\r\n                }else{\r\n                    let check = true;\r\n                    while(check){\r\n                        let rand1 = Math.floor(Math.random() * verbTypeList.length);\r\n                        check = answerList.filter(answer => answer.toLowerCase() === verbTypeList[rand1].toLowerCase()).length === 0 && rand1 !== rand ? false:true;\r\n    \r\n                        if(!check){\r\n                            answerList[j] = verbTypeList[rand1].toLowerCase();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            let questionItem = {\r\n                question: grammarList[rand].name,\r\n                answer: numTrueAnswer,\r\n                answerList: answerList\r\n            }\r\n            question.push(questionItem);\r\n            // setQuestion(question.push(questionItem));\r\n        }\r\n        \r\n    },[question])\r\n\r\n    return ( \r\n        <>\r\n        <div className=\"card\">\r\n            <div className=\"card-body p-0\">\r\n                <h5 className=\"card-title p-3 m-0 rounded-top bg-primary\" style={{color:\"#ffffff\"}}>\r\n                    <p className=\"col-md-1 m-0 d-inline-block\">Câu hỏi:</p>\r\n                    <div className=\"col-md-10 text-center d-inline-block\">\r\n                        <p className=\"d-inline-block m-0\">{count}/{total}</p>\r\n                    </div>\r\n                    \r\n                </h5>\r\n                <div className=\"border-top-0 rounded-0 text-center\" style={{minHeight: 80 + \"px\",padding: 20 + \"px\"}}>\r\n                    <h3 className=\"m-0\">{}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"card\">\r\n            <div className=\"card-body p-3\">\r\n                <div className=\"row m-0\">\r\n                    <div className=\"col-md-6 px-5 py-3\">\r\n                        <Answer key={0} index = {0} question = {question} count = {count} setCount = {setCount} isShowAnswer = {isShowAnswer} setIsShowAnswer = {setIsShowAnswer}/>\r\n                    </div>\r\n                    <div className=\"col-md-6 px-5 py-3\">\r\n                        <Answer key={1} index = {1} question = {question} count = {count} setCount = {setCount} isShowAnswer = {isShowAnswer} setIsShowAnswer = {setIsShowAnswer}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row m-0\">\r\n                    <div className=\"col-md-6 px-5 py-3\">\r\n                        <Answer key={2} index = {2} question = {question} count = {count} setCount = {setCount} isShowAnswer = {isShowAnswer} setIsShowAnswer = {setIsShowAnswer}/>\r\n                    </div>\r\n                    <div className=\"col-md-6 px-5 py-3\">\r\n                        <Answer key={3} index = {3} question = {question} count = {count} setCount = {setCount} isShowAnswer = {isShowAnswer} setIsShowAnswer = {setIsShowAnswer}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n\r\nexport default StudyPlay;"]},"metadata":{},"sourceType":"module"}