{"ast":null,"code":"var _jsxFileName = \"E:\\\\subjects\\\\ReactJS\\\\ReactJS\\\\example\\\\study\\\\client\\\\src\\\\Components\\\\Content\\\\study\\\\Answer.js\";\nimport Button from '@atlaskit/button';\nimport styled, { css } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ButtonConfig = styled.button`\n    background-color: ${p => p.isShowAnswer ? p.isClick ? p.isAnswer ? \"blue\" : \"red\" : p.isAnswer ? \"blue\" : \"white\" : \"white\"};\n    height: 100px;\n    width: 100%;\n    box-shadow: 1px 1px 8px;\n    padding: 30px;\n    border-radius: 10px;\n\n    &:hover{\n        background-color: #d6d6d6;\n    }\n`;\n_c = ButtonConfig;\n\nfunction Answer(_ref) {\n  let {\n    index,\n    answer,\n    onClickAnswer,\n    isShowAnswer,\n    numClick,\n    trueAnswer\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 px-5 py-3\",\n      children: /*#__PURE__*/_jsxDEV(ButtonConfig, {\n        isShowAnswer: isShowAnswer,\n        isClick: numClick === index,\n        onClick: () => onClickAnswer(index),\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c2 = Answer;\nexport default Answer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonConfig\");\n$RefreshReg$(_c2, \"Answer\");","map":{"version":3,"sources":["E:/subjects/ReactJS/ReactJS/example/study/client/src/Components/Content/study/Answer.js"],"names":["Button","styled","css","ButtonConfig","button","p","isShowAnswer","isClick","isAnswer","Answer","index","answer","onClickAnswer","numClick","trueAnswer"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;;;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAACG,MAAO;AACnC,wBAAwBC,CAAC,IAAIA,CAAC,CAACC,YAAF,GAAiBD,CAAC,CAACE,OAAF,GAAaF,CAAC,CAACG,QAAF,GAAa,MAAb,GAAoB,KAAjC,GAA2CH,CAAC,CAACG,QAAF,GAAW,MAAX,GAAkB,OAA9E,GAA0F,OAAQ;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;KAAML,Y;;AAaN,SAASM,MAAT,OAA+E;AAAA,MAA/D;AAACC,IAAAA,KAAD;AAAOC,IAAAA,MAAP;AAAcC,IAAAA,aAAd;AAA4BN,IAAAA,YAA5B;AAAyCO,IAAAA,QAAzC;AAAkDC,IAAAA;AAAlD,GAA+D;AAC3E,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACI,QAAC,YAAD;AACI,QAAA,YAAY,EAAIR,YADpB;AAEI,QAAA,OAAO,EAAIO,QAAQ,KAAKH,KAF5B;AAGI,QAAA,OAAO,EAAE,MAAME,aAAa,CAACF,KAAD,CAHhC;AAAA,kBAKKC;AALL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH;;MAdQF,M;AAgBT,eAAeA,MAAf","sourcesContent":["import Button from '@atlaskit/button';\r\nimport styled, {css} from 'styled-components';\r\n\r\nconst ButtonConfig = styled.button`\r\n    background-color: ${p => p.isShowAnswer? (p.isClick ? (p.isAnswer ? \"blue\":\"red\") : (p.isAnswer?\"blue\":\"white\")) : \"white\"};\r\n    height: 100px;\r\n    width: 100%;\r\n    box-shadow: 1px 1px 8px;\r\n    padding: 30px;\r\n    border-radius: 10px;\r\n\r\n    &:hover{\r\n        background-color: #d6d6d6;\r\n    }\r\n`;\r\n\r\nfunction Answer({index,answer,onClickAnswer,isShowAnswer,numClick,trueAnswer}) {\r\n    return ( \r\n        <>\r\n            <div className=\"col-md-6 px-5 py-3\">\r\n                <ButtonConfig\r\n                    isShowAnswer = {isShowAnswer}\r\n                    isClick = {numClick === index}\r\n                    onClick={() => onClickAnswer(index)}\r\n                >\r\n                    {answer}\r\n                </ButtonConfig>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Answer;"]},"metadata":{},"sourceType":"module"}