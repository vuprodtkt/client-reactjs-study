{"ast":null,"code":"/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx, keyframes } from '@emotion/core';\nimport { DN500, DN900, N0, N500 } from '@atlaskit/theme/colors';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport { presetSizes } from './constants';\n/**\n * Returns the appropriate circle stroke color.\n */\n\nfunction getStrokeColor(_ref) {\n  var mode = _ref.mode,\n      appearance = _ref.appearance;\n\n  if (mode === 'light') {\n    return appearance === 'inherit' ? \"var(--ds-text-subtle, \".concat(N500, \")\") : \"var(--ds-text-inverse, \".concat(N0, \")\");\n  }\n\n  return appearance === 'inherit' ? \"var(--ds-text-subtle, \".concat(DN900, \")\") : \"var(--ds-text-inverse, \".concat(DN500, \")\");\n}\n\nvar rotate = keyframes({\n  to: {\n    transform: 'rotate(360deg)'\n  }\n});\nvar rotateStyles = css({\n  animation: \"\".concat(rotate, \" 0.86s infinite\"),\n  animationTimingFunction: 'cubic-bezier(0.4, 0.15, 0.6, 0.85)',\n  transformOrigin: 'center'\n});\n/**\n * There are three parts to the load in animation:\n * 1. Fade in\n * 2. Accelerated spin\n * 3. Stretch the spinner line\n */\n\nvar loadIn = keyframes({\n  from: {\n    transform: 'rotate(50deg)',\n    opacity: 0,\n    strokeDashoffset: 60\n  },\n  to: {\n    transform: 'rotate(230deg)',\n    opacity: 1,\n    strokeDashoffset: 50\n  }\n});\nvar loadInStyles = css({\n  animation: \"\".concat(loadIn, \" 1s ease-in-out\"),\n\n  /**\n   * When the animation completes, stay at the last frame of the animation.\n   */\n  animationFillMode: 'forwards',\n\n  /**\n   * We are going to animate this in.\n   */\n  opacity: 0\n});\nvar wrapperStyles = css({\n  display: 'inline-flex',\n\n  /**\n   * Align better inline with text.\n   */\n  verticalAlign: 'middle'\n});\nvar circleStyles = css({\n  fill: 'none',\n  strokeDasharray: 60,\n  strokeDashoffset: 'inherit',\n  strokeLinecap: 'round',\n  strokeWidth: 1.5,\n  '@media screen and (forced-colors: active)': {\n    filter: 'grayscale(100%)',\n    stroke: 'CanvasText'\n  }\n});\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Spinner(_ref2, ref) {\n  var testId = _ref2.testId,\n      _ref2$appearance = _ref2.appearance,\n      appearance = _ref2$appearance === void 0 ? 'inherit' : _ref2$appearance,\n      _ref2$delay = _ref2.delay,\n      delay = _ref2$delay === void 0 ? 0 : _ref2$delay,\n      _ref2$size = _ref2.size,\n      providedSize = _ref2$size === void 0 ? 'medium' : _ref2$size;\n  var size = typeof providedSize === 'number' ? providedSize : presetSizes[providedSize];\n  var animationDelay = \"\".concat(delay, \"ms\");\n\n  var _useGlobalTheme = useGlobalTheme(),\n      mode = _useGlobalTheme.mode;\n\n  var stroke = getStrokeColor({\n    mode: mode,\n    appearance: appearance\n  });\n  /**\n   * The Spinner animation uses a combination of two\n   * css animations on two separate elements.\n   */\n\n  return jsx(\"span\", {\n    /**\n     * This span exists to off-load animations from the circle element,\n     * which were causing performance issues (style recalculations)\n     * on Safari and older versions of Chrome.\n     *\n     * This can be removed and styles placed back on the circle element once\n     * Safari fixes this bug and off-loads rendering to the GPU from the CPU.\n     */\n    css: [wrapperStyles, rotateStyles],\n    \"data-testid\": testId && \"\".concat(testId, \"-wrapper\"),\n    style: {\n      animationDelay: animationDelay,\n      width: size,\n      height: size\n    }\n  }, jsx(\"svg\", {\n    height: size,\n    width: size,\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-testid\": testId,\n    ref: ref,\n    css: loadInStyles,\n    style: {\n      animationDelay: animationDelay\n    }\n  }, jsx(\"circle\", {\n    cx: \"8\",\n    cy: \"8\",\n    r: \"7\",\n    css: circleStyles,\n    style: {\n      stroke: stroke\n    }\n  })));\n}));","map":{"version":3,"sources":["E:/subjects/ReactJS/ReactJS/example/study/client/node_modules/@atlaskit/spinner/dist/esm/spinner.js"],"names":["React","css","jsx","keyframes","DN500","DN900","N0","N500","useGlobalTheme","presetSizes","getStrokeColor","_ref","mode","appearance","concat","rotate","to","transform","rotateStyles","animation","animationTimingFunction","transformOrigin","loadIn","from","opacity","strokeDashoffset","loadInStyles","animationFillMode","wrapperStyles","display","verticalAlign","circleStyles","fill","strokeDasharray","strokeLinecap","strokeWidth","filter","stroke","memo","forwardRef","Spinner","_ref2","ref","testId","_ref2$appearance","_ref2$delay","delay","_ref2$size","size","providedSize","animationDelay","_useGlobalTheme","style","width","height","viewBox","xmlns","cx","cy","r"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport React from 'react';\nimport { css, jsx, keyframes } from '@emotion/core';\nimport { DN500, DN900, N0, N500 } from '@atlaskit/theme/colors';\nimport { useGlobalTheme } from '@atlaskit/theme/components';\nimport { presetSizes } from './constants';\n\n/**\n * Returns the appropriate circle stroke color.\n */\nfunction getStrokeColor(_ref) {\n  var mode = _ref.mode,\n      appearance = _ref.appearance;\n\n  if (mode === 'light') {\n    return appearance === 'inherit' ? \"var(--ds-text-subtle, \".concat(N500, \")\") : \"var(--ds-text-inverse, \".concat(N0, \")\");\n  }\n\n  return appearance === 'inherit' ? \"var(--ds-text-subtle, \".concat(DN900, \")\") : \"var(--ds-text-inverse, \".concat(DN500, \")\");\n}\n\nvar rotate = keyframes({\n  to: {\n    transform: 'rotate(360deg)'\n  }\n});\nvar rotateStyles = css({\n  animation: \"\".concat(rotate, \" 0.86s infinite\"),\n  animationTimingFunction: 'cubic-bezier(0.4, 0.15, 0.6, 0.85)',\n  transformOrigin: 'center'\n});\n/**\n * There are three parts to the load in animation:\n * 1. Fade in\n * 2. Accelerated spin\n * 3. Stretch the spinner line\n */\n\nvar loadIn = keyframes({\n  from: {\n    transform: 'rotate(50deg)',\n    opacity: 0,\n    strokeDashoffset: 60\n  },\n  to: {\n    transform: 'rotate(230deg)',\n    opacity: 1,\n    strokeDashoffset: 50\n  }\n});\nvar loadInStyles = css({\n  animation: \"\".concat(loadIn, \" 1s ease-in-out\"),\n\n  /**\n   * When the animation completes, stay at the last frame of the animation.\n   */\n  animationFillMode: 'forwards',\n\n  /**\n   * We are going to animate this in.\n   */\n  opacity: 0\n});\nvar wrapperStyles = css({\n  display: 'inline-flex',\n\n  /**\n   * Align better inline with text.\n   */\n  verticalAlign: 'middle'\n});\nvar circleStyles = css({\n  fill: 'none',\n  strokeDasharray: 60,\n  strokeDashoffset: 'inherit',\n  strokeLinecap: 'round',\n  strokeWidth: 1.5,\n  '@media screen and (forced-colors: active)': {\n    filter: 'grayscale(100%)',\n    stroke: 'CanvasText'\n  }\n});\nexport default /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Spinner(_ref2, ref) {\n  var testId = _ref2.testId,\n      _ref2$appearance = _ref2.appearance,\n      appearance = _ref2$appearance === void 0 ? 'inherit' : _ref2$appearance,\n      _ref2$delay = _ref2.delay,\n      delay = _ref2$delay === void 0 ? 0 : _ref2$delay,\n      _ref2$size = _ref2.size,\n      providedSize = _ref2$size === void 0 ? 'medium' : _ref2$size;\n  var size = typeof providedSize === 'number' ? providedSize : presetSizes[providedSize];\n  var animationDelay = \"\".concat(delay, \"ms\");\n\n  var _useGlobalTheme = useGlobalTheme(),\n      mode = _useGlobalTheme.mode;\n\n  var stroke = getStrokeColor({\n    mode: mode,\n    appearance: appearance\n  });\n  /**\n   * The Spinner animation uses a combination of two\n   * css animations on two separate elements.\n   */\n\n  return jsx(\"span\", {\n    /**\n     * This span exists to off-load animations from the circle element,\n     * which were causing performance issues (style recalculations)\n     * on Safari and older versions of Chrome.\n     *\n     * This can be removed and styles placed back on the circle element once\n     * Safari fixes this bug and off-loads rendering to the GPU from the CPU.\n     */\n    css: [wrapperStyles, rotateStyles],\n    \"data-testid\": testId && \"\".concat(testId, \"-wrapper\"),\n    style: {\n      animationDelay: animationDelay,\n      width: size,\n      height: size\n    }\n  }, jsx(\"svg\", {\n    height: size,\n    width: size,\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-testid\": testId,\n    ref: ref,\n    css: loadInStyles,\n    style: {\n      animationDelay: animationDelay\n    }\n  }, jsx(\"circle\", {\n    cx: \"8\",\n    cy: \"8\",\n    r: \"7\",\n    css: circleStyles,\n    style: {\n      stroke: stroke\n    }\n  })));\n}));"]},"metadata":{},"sourceType":"module"}