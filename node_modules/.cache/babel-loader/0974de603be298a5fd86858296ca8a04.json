{"ast":null,"code":"import { B100, B75, DN10, DN30, DN40, DN600, DN90, N0, N10, N100, N30, N40, N70, N900 } from '@atlaskit/theme/colors';\nexport var disabledBackgroundColor = {\n  light: \"var(--ds-background-disabled, \".concat(N10, \")\"),\n  dark: \"var(--ds-background-disabled, \".concat(DN10, \")\")\n};\nexport var defaultBackgroundColor = {\n  light: \"var(--ds-background-input, \".concat(N10, \")\"),\n  dark: \"var(--ds-background-input, \".concat(DN10, \")\")\n};\nexport var defaultBackgroundColorFocus = {\n  light: \"var(--ds-surface, \".concat(N0, \")\"),\n  dark: \"var(--ds-surface, \".concat(DN10, \")\")\n};\nexport var defaultBackgroundColorHover = {\n  light: \"var(--ds-surface, \".concat(N30, \")\"),\n  dark: \"var(--ds-surface, \".concat(DN30, \")\")\n};\nexport var subtleBackgroundColorHover = {\n  light: \"var(--ds-background-neutral-subtle-hovered, \".concat(N30, \")\"),\n  dark: \"var(--ds-background-neutral-subtle-hovered, \".concat(DN30, \")\")\n};\nexport var defaultBorderColor = {\n  light: \"var(--ds-border, \".concat(N40, \")\"),\n  dark: \"var(--ds-border, \".concat(DN40, \")\")\n};\nexport var defaultBorderColorFocus = {\n  light: \"var(--ds-border-focused, \".concat(B100, \")\"),\n  dark: \"var(--ds-border-focused, \".concat(B75, \")\")\n};\nexport var transparent = {\n  light: 'transparent',\n  dark: 'transparent'\n};\nexport var textColor = {\n  light: \"var(--ds-text, \".concat(N900, \")\"),\n  dark: \"var(--ds-text, \".concat(DN600, \")\")\n};\nexport var disabledTextColor = {\n  light: \"var(--ds-text-disabled, \".concat(N70, \")\"),\n  dark: \"var(--ds-text-disabled, \".concat(DN90, \")\")\n};\nexport var placeholderTextColor = {\n  light: \"var(--ds-text-subtlest, \".concat(N100, \")\"),\n  dark: \"var(--ds-text-subtlest, \".concat(DN90, \")\")\n};","map":{"version":3,"sources":["E:/subjects/ReactJS/ReactJS/example/vocabulary/node_modules/@atlaskit/textfield/dist/esm/component-tokens.js"],"names":["B100","B75","DN10","DN30","DN40","DN600","DN90","N0","N10","N100","N30","N40","N70","N900","disabledBackgroundColor","light","concat","dark","defaultBackgroundColor","defaultBackgroundColorFocus","defaultBackgroundColorHover","subtleBackgroundColorHover","defaultBorderColor","defaultBorderColorFocus","transparent","textColor","disabledTextColor","placeholderTextColor"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6CC,IAA7C,EAAmDC,EAAnD,EAAuDC,GAAvD,EAA4DC,IAA5D,EAAkEC,GAAlE,EAAuEC,GAAvE,EAA4EC,GAA5E,EAAiFC,IAAjF,QAA6F,wBAA7F;AACA,OAAO,IAAIC,uBAAuB,GAAG;AACnCC,EAAAA,KAAK,EAAE,iCAAiCC,MAAjC,CAAwCR,GAAxC,EAA6C,GAA7C,CAD4B;AAEnCS,EAAAA,IAAI,EAAE,iCAAiCD,MAAjC,CAAwCd,IAAxC,EAA8C,GAA9C;AAF6B,CAA9B;AAIP,OAAO,IAAIgB,sBAAsB,GAAG;AAClCH,EAAAA,KAAK,EAAE,8BAA8BC,MAA9B,CAAqCR,GAArC,EAA0C,GAA1C,CAD2B;AAElCS,EAAAA,IAAI,EAAE,8BAA8BD,MAA9B,CAAqCd,IAArC,EAA2C,GAA3C;AAF4B,CAA7B;AAIP,OAAO,IAAIiB,2BAA2B,GAAG;AACvCJ,EAAAA,KAAK,EAAE,qBAAqBC,MAArB,CAA4BT,EAA5B,EAAgC,GAAhC,CADgC;AAEvCU,EAAAA,IAAI,EAAE,qBAAqBD,MAArB,CAA4Bd,IAA5B,EAAkC,GAAlC;AAFiC,CAAlC;AAIP,OAAO,IAAIkB,2BAA2B,GAAG;AACvCL,EAAAA,KAAK,EAAE,qBAAqBC,MAArB,CAA4BN,GAA5B,EAAiC,GAAjC,CADgC;AAEvCO,EAAAA,IAAI,EAAE,qBAAqBD,MAArB,CAA4Bb,IAA5B,EAAkC,GAAlC;AAFiC,CAAlC;AAIP,OAAO,IAAIkB,0BAA0B,GAAG;AACtCN,EAAAA,KAAK,EAAE,+CAA+CC,MAA/C,CAAsDN,GAAtD,EAA2D,GAA3D,CAD+B;AAEtCO,EAAAA,IAAI,EAAE,+CAA+CD,MAA/C,CAAsDb,IAAtD,EAA4D,GAA5D;AAFgC,CAAjC;AAIP,OAAO,IAAImB,kBAAkB,GAAG;AAC9BP,EAAAA,KAAK,EAAE,oBAAoBC,MAApB,CAA2BL,GAA3B,EAAgC,GAAhC,CADuB;AAE9BM,EAAAA,IAAI,EAAE,oBAAoBD,MAApB,CAA2BZ,IAA3B,EAAiC,GAAjC;AAFwB,CAAzB;AAIP,OAAO,IAAImB,uBAAuB,GAAG;AACnCR,EAAAA,KAAK,EAAE,4BAA4BC,MAA5B,CAAmChB,IAAnC,EAAyC,GAAzC,CAD4B;AAEnCiB,EAAAA,IAAI,EAAE,4BAA4BD,MAA5B,CAAmCf,GAAnC,EAAwC,GAAxC;AAF6B,CAA9B;AAIP,OAAO,IAAIuB,WAAW,GAAG;AACvBT,EAAAA,KAAK,EAAE,aADgB;AAEvBE,EAAAA,IAAI,EAAE;AAFiB,CAAlB;AAIP,OAAO,IAAIQ,SAAS,GAAG;AACrBV,EAAAA,KAAK,EAAE,kBAAkBC,MAAlB,CAAyBH,IAAzB,EAA+B,GAA/B,CADc;AAErBI,EAAAA,IAAI,EAAE,kBAAkBD,MAAlB,CAAyBX,KAAzB,EAAgC,GAAhC;AAFe,CAAhB;AAIP,OAAO,IAAIqB,iBAAiB,GAAG;AAC7BX,EAAAA,KAAK,EAAE,2BAA2BC,MAA3B,CAAkCJ,GAAlC,EAAuC,GAAvC,CADsB;AAE7BK,EAAAA,IAAI,EAAE,2BAA2BD,MAA3B,CAAkCV,IAAlC,EAAwC,GAAxC;AAFuB,CAAxB;AAIP,OAAO,IAAIqB,oBAAoB,GAAG;AAChCZ,EAAAA,KAAK,EAAE,2BAA2BC,MAA3B,CAAkCP,IAAlC,EAAwC,GAAxC,CADyB;AAEhCQ,EAAAA,IAAI,EAAE,2BAA2BD,MAA3B,CAAkCV,IAAlC,EAAwC,GAAxC;AAF0B,CAA3B","sourcesContent":["import { B100, B75, DN10, DN30, DN40, DN600, DN90, N0, N10, N100, N30, N40, N70, N900 } from '@atlaskit/theme/colors';\nexport var disabledBackgroundColor = {\n  light: \"var(--ds-background-disabled, \".concat(N10, \")\"),\n  dark: \"var(--ds-background-disabled, \".concat(DN10, \")\")\n};\nexport var defaultBackgroundColor = {\n  light: \"var(--ds-background-input, \".concat(N10, \")\"),\n  dark: \"var(--ds-background-input, \".concat(DN10, \")\")\n};\nexport var defaultBackgroundColorFocus = {\n  light: \"var(--ds-surface, \".concat(N0, \")\"),\n  dark: \"var(--ds-surface, \".concat(DN10, \")\")\n};\nexport var defaultBackgroundColorHover = {\n  light: \"var(--ds-surface, \".concat(N30, \")\"),\n  dark: \"var(--ds-surface, \".concat(DN30, \")\")\n};\nexport var subtleBackgroundColorHover = {\n  light: \"var(--ds-background-neutral-subtle-hovered, \".concat(N30, \")\"),\n  dark: \"var(--ds-background-neutral-subtle-hovered, \".concat(DN30, \")\")\n};\nexport var defaultBorderColor = {\n  light: \"var(--ds-border, \".concat(N40, \")\"),\n  dark: \"var(--ds-border, \".concat(DN40, \")\")\n};\nexport var defaultBorderColorFocus = {\n  light: \"var(--ds-border-focused, \".concat(B100, \")\"),\n  dark: \"var(--ds-border-focused, \".concat(B75, \")\")\n};\nexport var transparent = {\n  light: 'transparent',\n  dark: 'transparent'\n};\nexport var textColor = {\n  light: \"var(--ds-text, \".concat(N900, \")\"),\n  dark: \"var(--ds-text, \".concat(DN600, \")\")\n};\nexport var disabledTextColor = {\n  light: \"var(--ds-text-disabled, \".concat(N70, \")\"),\n  dark: \"var(--ds-text-disabled, \".concat(DN90, \")\")\n};\nexport var placeholderTextColor = {\n  light: \"var(--ds-text-subtlest, \".concat(N100, \")\"),\n  dark: \"var(--ds-text-subtlest, \".concat(DN90, \")\")\n};"]},"metadata":{},"sourceType":"module"}