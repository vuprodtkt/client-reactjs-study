{"ast":null,"code":"var _jsxFileName = \"E:\\\\subjects\\\\ReactJS\\\\ReactJS\\\\example\\\\study\\\\client\\\\src\\\\Components\\\\Content\\\\study\\\\Answer.js\";\nimport Button from '@atlaskit/button';\nimport styled, { css } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ButtonConfig = styled.button`\n    background-color: ${p => p.isShowAnswer ? p.isClick ? p.isAnswer ? \"blue!important\" : \"red!important\" : p.isAnswer ? \"blue!important\" : \"white!important\" : \"white!important\"};\n    height: 100px;\n    width: 100%;\n    box-shadow: 1px 1px 8px;\n    padding: 30px;\n    border-radius: 10px;\n\n    &:hover{\n        background-color: #d6d6d6;\n    }\n`; // function Answer({index, question, count, setCount, isShowAnswer,setIsShowAnswer}) {\n//     let isClick = false;\n//     console.log(question);\n//     const onClickAnswer = () =>{\n//         isClick = true;\n//         setIsShowAnswer(true);\n//     }\n//     return ( \n//         <>\n//             <ButtonConfig\n//                 isShowAnswer = {isShowAnswer}\n//                 isClick = {isClick}\n//                 answer = {question[count-1].answer === index}\n//                 onClick= {() => onClickAnswer()}\n//             >\n//                 {question[count-1].answerList[index]}\n//             </ButtonConfig>\n//         </>\n//     );\n// }\n\n_c = ButtonConfig;\n\nfunction Answer(_ref) {\n  let {\n    index,\n    question,\n    count,\n    setCount,\n    isShowAnswer,\n    setIsShowAnswer\n  } = _ref;\n  console.log(\"Answer\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6 px-5 py-3\",\n      children: /*#__PURE__*/_jsxDEV(ButtonConfig, {\n        isClick: isClick,\n        answer: question[count - 1].answer === index,\n        onClick: () => onClickAnswer(),\n        children: question[count - 1].answerList[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c2 = Answer;\nexport default Answer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonConfig\");\n$RefreshReg$(_c2, \"Answer\");","map":{"version":3,"sources":["E:/subjects/ReactJS/ReactJS/example/study/client/src/Components/Content/study/Answer.js"],"names":["Button","styled","css","ButtonConfig","button","p","isShowAnswer","isClick","isAnswer","Answer","index","question","count","setCount","setIsShowAnswer","console","log","answer","onClickAnswer","answerList"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;;;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAACG,MAAO;AACnC,wBAAwBC,CAAC,IAAIA,CAAC,CAACC,YAAF,GAAiBD,CAAC,CAACE,OAAF,GAAaF,CAAC,CAACG,QAAF,GAAa,gBAAb,GAA8B,eAA3C,GAA+DH,CAAC,CAACG,QAAF,GAAW,gBAAX,GAA4B,iBAA5G,GAAkI,iBAAkB;AACjL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA,C,CAaA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAjCML,Y;;AAmCN,SAASM,MAAT,OAAkF;AAAA,MAAlE;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,QAAzB;AAAmCP,IAAAA,YAAnC;AAAgDQ,IAAAA;AAAhD,GAAkE;AAC9EC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACI,QAAC,YAAD;AACI,QAAA,OAAO,EAAIT,OADf;AAEI,QAAA,MAAM,EAAII,QAAQ,CAACC,KAAK,GAAC,CAAP,CAAR,CAAkBK,MAAlB,KAA6BP,KAF3C;AAGI,QAAA,OAAO,EAAG,MAAMQ,aAAa,EAHjC;AAAA,kBAKKP,QAAQ,CAACC,KAAK,GAAC,CAAP,CAAR,CAAkBO,UAAlB,CAA6BT,KAA7B;AALL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAaH;;MAfQD,M;AAiBT,eAAeA,MAAf","sourcesContent":["import Button from '@atlaskit/button';\r\nimport styled, {css} from 'styled-components';\r\n\r\nconst ButtonConfig = styled.button`\r\n    background-color: ${p => p.isShowAnswer? (p.isClick ? (p.isAnswer ? \"blue!important\":\"red!important\") : (p.isAnswer?\"blue!important\":\"white!important\")) : \"white!important\"};\r\n    height: 100px;\r\n    width: 100%;\r\n    box-shadow: 1px 1px 8px;\r\n    padding: 30px;\r\n    border-radius: 10px;\r\n\r\n    &:hover{\r\n        background-color: #d6d6d6;\r\n    }\r\n`;\r\n\r\n// function Answer({index, question, count, setCount, isShowAnswer,setIsShowAnswer}) {\r\n//     let isClick = false;\r\n//     console.log(question);\r\n\r\n//     const onClickAnswer = () =>{\r\n//         isClick = true;\r\n//         setIsShowAnswer(true);\r\n//     }\r\n//     return ( \r\n//         <>\r\n//             <ButtonConfig\r\n//                 isShowAnswer = {isShowAnswer}\r\n//                 isClick = {isClick}\r\n//                 answer = {question[count-1].answer === index}\r\n//                 onClick= {() => onClickAnswer()}\r\n//             >\r\n//                 {question[count-1].answerList[index]}\r\n//             </ButtonConfig>\r\n//         </>\r\n//     );\r\n// }\r\n\r\nfunction Answer({index, question, count, setCount, isShowAnswer,setIsShowAnswer}) {\r\n    console.log(\"Answer\");\r\n    return ( \r\n        <>\r\n            <div className=\"col-md-6 px-5 py-3\">\r\n                <ButtonConfig\r\n                    isClick = {isClick}\r\n                    answer = {question[count-1].answer === index}\r\n                    onClick= {() => onClickAnswer()}\r\n                >\r\n                    {question[count-1].answerList[index]}\r\n                </ButtonConfig>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Answer;"]},"metadata":{},"sourceType":"module"}