{"ast":null,"code":"var _jsxFileName = \"E:\\\\subjects\\\\ReactJS\\\\ReactJS\\\\example\\\\study\\\\client\\\\src\\\\Components\\\\Content\\\\study\\\\StudyPlay.js\";\nimport styled, { css } from 'styled-components';\nimport Button from '@atlaskit/button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ButtonConfig = styled(Button)`\n    background-color: white!important;\n    height: 100px;\n    width:100%;\n    box-shadow: 1px 1px 8px;\n\n    padding:30px;\n\n    &:hover{\n        background-color: #d6d6d6!important;\n    }\n`;\n_c = ButtonConfig;\n\nfunction StudyPlay(_ref) {\n  let {\n    numVocab,\n    numGrammar,\n    vocabularyList,\n    grammarList\n  } = _ref;\n  let count = 1;\n  let total = numVocab + numGrammar;\n  let question = [];\n  let verbTypeList = [\"V-ing\", \"to + V1\", \"V1\", \"v3/ed\", \"v2\"];\n  let meansType = vocabularyList.map(vocab => vocab.means);\n  let fourAnswer = [];\n\n  const formatType = type => {\n    if (type == \"Danh từ\") {\n      return \"(n)\";\n    } else if (type == \"Động từ\") {\n      return \"(v)\";\n    } else if (type == \"Tính từ\") {\n      return \"(adj)\";\n    } else if (type == \"Trạng từ\") {\n      return \"(adv)\";\n    }\n  };\n\n  for (let i = 0; i < numVocab; i++) {\n    let rand = Math.floor(Math.random() * vocabularyList.length);\n    let numTrueAnswer = Math.floor(Math.random() * 4);\n    let answerList = [];\n\n    for (let j = 0; j < 4; j++) {\n      if (j == numTrueAnswer) {\n        answerList[j] = vocabularyList[rand].means;\n      } else {\n        let check = true;\n\n        while (check) {\n          let rand1 = Math.floor(Math.random() * vocabularyList.length);\n          check = answerList.filter(answer => answer == vocabularyList[rand1].means).length == 0 ? false : true;\n\n          if (!check) {\n            answerList[j] = vocabularyList[rand1].means;\n          }\n        }\n      }\n    }\n\n    let questionItem = {\n      question: vocabularyList[rand].name + \" \" + formatType(vocabularyList[rand].type),\n      answer: vocabularyList[rand].means,\n      answerList: answerList\n    };\n    question.push(questionItem);\n  }\n\n  for (let i = 0; i < numGrammar; i++) {\n    let rand = Math.floor(Math.random() * grammarList.length);\n    let questionItem = {\n      question: grammarList[rand].name,\n      answer: grammarList[rand].varbType\n    };\n    question.push(questionItem);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body p-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title p-3 m-0 rounded-top bg-primary\",\n          style: {\n            color: \"#ffffff\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"col-md-1 m-0 d-inline-block\",\n            children: \"C\\xE2u h\\u1ECFi:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-10 text-center d-inline-block\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"d-inline-block m-0\",\n              children: [count, \"/\", total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border-top-0 rounded-0 text-center\",\n          style: {\n            minHeight: 80 + \"px\",\n            padding: 20 + \"px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"m-0\",\n            children: question[count - 1].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row m-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 px-5 py-3\",\n            children: /*#__PURE__*/_jsxDEV(ButtonConfig, {\n              children: \"ABc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 px-5 py-3\",\n            children: /*#__PURE__*/_jsxDEV(ButtonConfig, {\n              children: \"ABc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row m-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 px-5 py-3\",\n            children: /*#__PURE__*/_jsxDEV(ButtonConfig, {\n              children: \"ABc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 px-5 py-3\",\n            children: /*#__PURE__*/_jsxDEV(ButtonConfig, {\n              children: \"ABc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = StudyPlay;\nexport default StudyPlay;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonConfig\");\n$RefreshReg$(_c2, \"StudyPlay\");","map":{"version":3,"sources":["E:/subjects/ReactJS/ReactJS/example/study/client/src/Components/Content/study/StudyPlay.js"],"names":["styled","css","Button","ButtonConfig","StudyPlay","numVocab","numGrammar","vocabularyList","grammarList","count","total","question","verbTypeList","meansType","map","vocab","means","fourAnswer","formatType","type","i","rand","Math","floor","random","length","numTrueAnswer","answerList","j","check","rand1","filter","answer","questionItem","name","push","varbType","color","minHeight","padding"],"mappings":"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","sourcesContent":["import styled, {css} from 'styled-components';\r\nimport Button from '@atlaskit/button';\r\n\r\nconst ButtonConfig = styled(Button)`\r\n    background-color: white!important;\r\n    height: 100px;\r\n    width:100%;\r\n    box-shadow: 1px 1px 8px;\r\n\r\n    padding:30px;\r\n\r\n    &:hover{\r\n        background-color: #d6d6d6!important;\r\n    }\r\n`\r\n\r\nfunction StudyPlay({numVocab,numGrammar,vocabularyList,grammarList}) {\r\n    let count = 1;\r\n    let total = numVocab + numGrammar;\r\n    let question = [];\r\n\r\n    let verbTypeList = [\"V-ing\", \"to + V1\", \"V1\", \"v3/ed\",\"v2\"];\r\n    let meansType = vocabularyList.map(vocab => vocab.means);\r\n    let fourAnswer = []\r\n\r\n    const formatType = (type) =>{\r\n        if(type == \"Danh từ\"){\r\n            return \"(n)\";\r\n        }\r\n        else if(type == \"Động từ\"){\r\n            return \"(v)\";\r\n        }\r\n        else if(type == \"Tính từ\"){\r\n            return \"(adj)\";\r\n        }\r\n        else if(type == \"Trạng từ\"){\r\n            return \"(adv)\";\r\n        }\r\n    }\r\n\r\n    for(let i = 0;i< numVocab;i++){\r\n        let rand = Math.floor(Math.random() * vocabularyList.length);\r\n\r\n        let numTrueAnswer = Math.floor(Math.random() * 4);\r\n        let answerList = []\r\n        for(let j = 0;j<4;j++){\r\n            if (j == numTrueAnswer){\r\n                answerList[j] = vocabularyList[rand].means;\r\n            }else{\r\n                let check = true;\r\n                while(check){\r\n                    let rand1 = Math.floor(Math.random() * vocabularyList.length);\r\n                    check = answerList.filter(answer => answer == vocabularyList[rand1].means).length == 0 ? false:true;\r\n\r\n                    if(!check){\r\n                        answerList[j] = vocabularyList[rand1].means;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let questionItem = {\r\n            question: vocabularyList[rand].name + \" \" + formatType(vocabularyList[rand].type),\r\n            answer: vocabularyList[rand].means,\r\n            answerList: answerList\r\n        }\r\n        question.push(questionItem);    \r\n    }\r\n    for(let i = 0;i< numGrammar;i++){\r\n        let rand = Math.floor(Math.random() * grammarList.length);\r\n        let questionItem = {\r\n            question: grammarList[rand].name,\r\n            answer: grammarList[rand].varbType\r\n        }\r\n        question.push(questionItem);\r\n    }\r\n\r\n    \r\n\r\n    return ( \r\n        <>\r\n        <div className=\"card\">\r\n            <div className=\"card-body p-0\">\r\n                <h5 className=\"card-title p-3 m-0 rounded-top bg-primary\" style={{color:\"#ffffff\"}}>\r\n                    <p className=\"col-md-1 m-0 d-inline-block\">Câu hỏi:</p>\r\n                    <div className=\"col-md-10 text-center d-inline-block\">\r\n                        <p className=\"d-inline-block m-0\">{count}/{total}</p>\r\n                    </div>\r\n                    \r\n                </h5>\r\n                <div className=\"border-top-0 rounded-0 text-center\" style={{minHeight: 80 + \"px\",padding: 20 + \"px\"}}>\r\n                    <h3 className=\"m-0\">{question[count - 1].question}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"card\">\r\n            <div className=\"card-body p-3\">\r\n                <div className=\"row m-0\">\r\n                    <div className=\"col-md-6 px-5 py-3\">\r\n                        <ButtonConfig >ABc</ButtonConfig>\r\n                    </div>\r\n                    <div className=\"col-md-6 px-5 py-3\">\r\n                        <ButtonConfig >ABc</ButtonConfig> \r\n                    </div>\r\n                </div>\r\n                <div className=\"row m-0\">\r\n                    <div className=\"col-md-6 px-5 py-3\">\r\n                        <ButtonConfig >ABc</ButtonConfig>\r\n                    </div>\r\n                    <div className=\"col-md-6 px-5 py-3\">\r\n                        <ButtonConfig >ABc</ButtonConfig>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n\r\nexport default StudyPlay;"]},"metadata":{},"sourceType":"module"}