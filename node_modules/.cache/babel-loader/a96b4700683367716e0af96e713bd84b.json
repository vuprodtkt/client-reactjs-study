{"ast":null,"code":"var _jsxFileName = \"E:\\\\subjects\\\\ReactJS\\\\ReactJS\\\\example\\\\study\\\\client\\\\src\\\\Components\\\\Content\\\\study\\\\Answer.js\";\nimport styled, { css } from 'styled-components';\nimport Button from '@atlaskit/button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ButtonConfig = styled(Button)`\n    background-color: white!important;\n    height: 100px;\n    width:100%;\n    box-shadow: 1px 1px 8px;\n\n    &{\n        ${p => p.isShowAnswer && css`\n            background-color: #d6d6d6!important;`}\n    }\n\n    padding:30px;\n\n    &:hover{\n        background-color: #d6d6d6!important;\n    }\n`;\n_c = ButtonConfig;\n\nfunction Answer(_ref) {\n  let {} = _ref;\n  let isShowAnswer = false;\n\n  const onClickAnswer = (answer, trueAnswer, num) => {\n    isShowAnswer = true;\n\n    if (answer === trueAnswer) {\n      isRight = true;\n      numClick = num;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ButtonConfig, {\n      isShowAnswer: isShowAnswer,\n      style: isShowAnswer ? numClick === 0 ? question[count - 1].answerList[0] === question[count - 1].trueAnswer ? showBlue : showRed : question[count - 1].answerList[0] === question[count - 1].trueAnswer ? showBlue : noShowAnswer : noShowAnswer,\n      onClick: () => onClickAnswer(question[count - 1].answerList[0], question[count - 1].trueAnswer, 0),\n      children: question[count - 1].answerList[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c2 = Answer;\nexport default Answer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonConfig\");\n$RefreshReg$(_c2, \"Answer\");","map":{"version":3,"sources":["E:/subjects/ReactJS/ReactJS/example/study/client/src/Components/Content/study/Answer.js"],"names":["styled","css","Button","ButtonConfig","p","isShowAnswer","Answer","onClickAnswer","answer","trueAnswer","num","isRight","numClick","question","count","answerList","showBlue","showRed","noShowAnswer"],"mappings":";AAAA,OAAOA,MAAP,IAAgBC,GAAhB,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAEA,MAAMC,YAAY,GAAGH,MAAM,CAACE,MAAD,CAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,UAAWE,CAAD,IACEA,CAAC,CAACC,YAAF,IACAJ,GAAI;AAChB,iDACS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;KAAME,Y;;AAqBN,SAASG,MAAT,OAAoB;AAAA,MAAJ,EAAI;AAChB,MAAID,YAAY,GAAG,KAAnB;;AAEA,QAAME,aAAa,GAAG,CAACC,MAAD,EAAQC,UAAR,EAAmBC,GAAnB,KAA0B;AAC5CL,IAAAA,YAAY,GAAG,IAAf;;AACA,QAAGG,MAAM,KAAKC,UAAd,EAAyB;AACrBE,MAAAA,OAAO,GAAG,IAAV;AACAC,MAAAA,QAAQ,GAAGF,GAAX;AACH;AACJ,GAND;;AAOA,sBACI;AAAA,2BACI,QAAC,YAAD;AACI,MAAA,YAAY,EAAEL,YADlB;AAEI,MAAA,KAAK,EAAEA,YAAY,GAAGO,QAAQ,KAAK,CAAb,GAAkBC,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR,CAAoBC,UAApB,CAA+B,CAA/B,MAAsCF,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR,CAAoBL,UAA1D,GAAuEO,QAAvE,GAAkFC,OAApG,GAA8GJ,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR,CAAoBC,UAApB,CAA+B,CAA/B,MAAsCF,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR,CAAoBL,UAA1D,GAAuEO,QAAvE,GAAgFE,YAAjM,GAAkNA,YAFzO;AAGI,MAAA,OAAO,EAAE,MAAMX,aAAa,CAACM,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR,CAAoBC,UAApB,CAA+B,CAA/B,CAAD,EAAmCF,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR,CAAoBL,UAAvD,EAAkE,CAAlE,CAHhC;AAAA,gBAKKI,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR,CAAoBC,UAApB,CAA+B,CAA/B;AALL;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAWH;;MArBQT,M;AAuBT,eAAeA,MAAf","sourcesContent":["import styled, {css} from 'styled-components';\r\nimport Button from '@atlaskit/button';\r\n\r\nconst ButtonConfig = styled(Button)`\r\n    background-color: white!important;\r\n    height: 100px;\r\n    width:100%;\r\n    box-shadow: 1px 1px 8px;\r\n\r\n    &{\r\n        ${(p) => \r\n            p.isShowAnswer && \r\n            css`\r\n            background-color: #d6d6d6!important;`\r\n        }\r\n    }\r\n\r\n    padding:30px;\r\n\r\n    &:hover{\r\n        background-color: #d6d6d6!important;\r\n    }\r\n`\r\n\r\nfunction Answer({}) {\r\n    let isShowAnswer = false;\r\n\r\n    const onClickAnswer = (answer,trueAnswer,num) =>{\r\n        isShowAnswer = true;\r\n        if(answer === trueAnswer){\r\n            isRight = true;\r\n            numClick = num\r\n        }\r\n    }\r\n    return ( \r\n        <>\r\n            <ButtonConfig\r\n                isShowAnswer={isShowAnswer}\r\n                style={isShowAnswer? (numClick === 0 ? (question[count - 1].answerList[0] === question[count - 1].trueAnswer ? showBlue : showRed):(question[count - 1].answerList[0] === question[count - 1].trueAnswer ? showBlue:noShowAnswer)) : noShowAnswer}\r\n                onClick={() => onClickAnswer(question[count - 1].answerList[0],question[count - 1].trueAnswer,0)}\r\n            >\r\n                {question[count - 1].answerList[0]}\r\n            </ButtonConfig>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Answer;"]},"metadata":{},"sourceType":"module"}